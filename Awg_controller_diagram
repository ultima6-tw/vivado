+--------------------------------------------------------------------------------------+
|                           AWG 系統架構與時序圖 (最終修正版 v2)                         |
+======================================================================================+
| [ 層級 3: 系統層 - Ping-Pong 雙緩衝區機制 ]                                              |
|                                                                                      |
|     +----------------------------+             +----------------------------+        |
|     |           List 0           |             |           List 1           |        |
|     |       (狀態: Playing)      |             |      (狀態: Preloading)    |        |
|     +----------------------------+             +----------------------------+        |
|     | A1 | B2 | A3 | B4 | ...    |             | A1 | B2 | A3 | B4 | ...    |        |
|     +----------------------------+             +----------------------------+        |
|               ^                                             |                        |
|               | (依 period_us 節拍, 逐幀 COMMIT 更新輸出)   | (Client 批量送入)      |
|               |                                             |                        |
|      FPGA 正在播放 (Playing)                              客戶端正在預載入               |
|                                                           (Preloading)               |
|                                                                                      |
| * 切換條件: 當 List 0 播放完畢，系統會檢查 List 1 是否為 READY 狀態，若是則立即切換。          |
|                                                                                      |
+--------------------------------------------------------------------------------------+
                                          ^
                                          |
                      (客戶端使用 B -> P... -> E 流程預載入整個 List)
                                          |
+--------------------------------------------------------------------------------------+
| [ 層級 2: 列表層 - 一個 List 是由多個 Frame 組成的序列 ]                                  |
|                                                                                      |
|   List 0 = [ Frame A1, Frame B2, Frame A3, Frame B4, ... Frame_An ]                  |
|                                                                                      |
+--------------------------------------------------------------------------------------+
                                          ^
                                          |
                             (每一個 Frame 都是一個最小指令單位)
                                          |
+--------------------------------------------------------------------------------------+
| [ 層級 1: 幀層 - 一個 Frame 是由多個 32-bit 指令字 (Word) 組成的原子操作 ]                 |
|                                                                                      |
|   典型最小 Frame (3 words):                                                           |
|   Frame A1 = [ INDEX(A, ...), GAIN(A, ...), COMMIT ]                                 |
|                                                                                      |
|   指令字格式 (每個 Word 都是 32-bit):                                                  |
|   [31:28] CMD | [27] CH | [26:24] TONE | [23:0] DATA                                 |
|   (1=INDEX, 2=GAIN, F=COMMIT) (0/1)  (0-7)   (INDEX 或 GAIN 的低 20 位)              |
|                                                                                      |
| * COMMIT 的作用: 讓同一幀內的所有 INDEX/GAIN 設定「原子化 (atomically)」一次生效。       |
| * Index value: 0 ~ 899 (Decimal)                                                     |
| * Gain value:  0 ~ 0x1FFFF (Q1.17 format, Hex)                                        |
|                                                                                      |
+--------------------------------------------------------------------------------------+
                                          |
                                          | (上述結構所產生的事件時序)
                                          v
+--------------------------------------------------------------------------------------+
| [ 事件時序 (Event Timeline) - 一次完整的 Ping-Pong 循環 ]                                |
|                                                                                      |
|   1. 客戶端發送 (B->P...->E) -> 伺服器將 List 0 標記為 READY -> (由於是第一個) 自動開始播放。|
|   2. 客戶端發送 (B->P...->E) -> 伺服器將 List 1 標記為 READY (等待切換)。                  |
|   3. 播放器播完 List 0 -> 立即切換到 List 1 -> 伺服器自動將 List 0 清空為 IDLE。           |
|   4. 客戶端收到 LIST0:IDLE 通知 -> 再次對 List 0 進行預載入... (循環開始)                  |
|                                                                                      |
+--------------------------------------------------------------------------------------+